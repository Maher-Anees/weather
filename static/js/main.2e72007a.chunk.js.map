{"version":3,"sources":["components/hforecast.js","components/dforecast.js","components/mforecast.js","components/DisplayWeather.js","components/fire.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["HForecast","props","dt","iconurl","temp","today","datetime","Date","parseInt","getDay","style","margin","padding","toLocaleTimeString","src","className","alt","width","Math","floor","DForecast","React","useState","days","getDate","getMonth","getFullYear","MForecast","DisplayWeather","weather","forecast","status","setpadding","document","getElementById","setAttribute","cod","icon","list","i","push","main","Fragment","bgImage","setheading","setinput","updatebg","city","name","country","toDateString","description","temp_max","temp_min","humidity","pressure","visibility","wind","speed","deg","sys","sunrise","sunset","id","overflow","data-toggle","href","data-parent","position","display","undefined","map","num","premium","message","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","facebookProvider","auth","FacebookAuthProvider","Weather","APIKEY","City","Country","form","setWeather","Forecast","setForecast","title","LoginState","submitSignInWithFacebook","signInWithPopup","then","result","error","alert","onAuthStateChanged","user","username","email","split","signOut","weatherData","e","a","preventDefault","fetch","res","json","data","data2","onClick","background","transition","class","for","type","opacity","placeholder","onChange","event","target","value","onKeyPress","key","enterfunc","$","ajax","url","jsonpCallback","dataType","success","location","updatelocation","xmlns","height","fill","viewBox","fill-rule","d","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mQAsCeA,MAlCf,SAAmBC,GAAQ,IACjBC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,MACrBC,EAAW,IAAIC,KAAU,IAALL,GAE1B,OAAIM,SAASF,EAASG,YAAcJ,EAEhC,sBACEK,MAAO,CACL,mBAAoB,oBACpB,gBAAiB,OACjBC,OAAQ,MACRC,QAAS,QALb,UAQE,uCACA,mCAAMN,EAASO,qBAAf,OACA,qBACEC,IAAKX,EACLY,UAAU,eACVL,MAAO,CAAE,gBAAiB,QAC1BM,IAAI,GACJC,MAAM,OAER,+BACGC,KAAKC,MAAMf,EAAO,QACnB,0CAKC,MCkCIgB,MAhEf,SAAmBnB,GAAQ,IACjBC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,MACrBC,EAAW,IAAIC,KAAU,IAALL,GAFF,EAGTmB,IAAMC,SAAS,CAC5B,SACA,SACA,UACA,YACA,WACA,SACA,aAPKC,EAHiB,oBAuBxB,MACqC,eAAlCjB,EAASO,sBACRL,SAASF,EAASG,YAAcJ,GACC,eAAlCC,EAASO,sBACRL,SAASF,EAASG,YAAcJ,EAGhC,sBACEK,MAAO,CACL,mBAAoB,oBACpB,gBAAiB,OACjBC,OAAQ,MACRC,QAAS,QALb,UAQE,6BACGN,EAASkB,UACR,KACChB,SAASF,EAASmB,YAAc,GACjC,IACAnB,EAASoB,gBA7BblB,SAASF,EAASG,YAAcJ,EAC3B,uCACEG,SAASF,EAASG,YAAcJ,EAAQ,EAC1C,2CAEA,6BAAKkB,EAAKf,SAASF,EAASG,aA2BjC,qBACEK,IAAKX,EACLY,UAAU,eACVL,MAAO,CAAE,gBAAiB,QAC1BM,IAAI,GACJC,MAAM,OAER,+BACGC,KAAKC,MAAMf,EAAO,QACnB,0CAKC,MCrBIuB,MAvCf,SAAmB1B,GAAQ,IACjBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,KACfE,EAAW,IAAIC,KAAU,IAALL,GAFF,EAGTmB,IAAMC,SAAS,CAC5B,SACA,SACA,UACA,YACA,WACA,SACA,aAPKC,EAHiB,oBAaxB,OACE,sBACEb,MAAO,CACL,mBAAoB,oBACpB,gBAAiB,OACjBC,OAAQ,MACRC,QAAS,QALb,UAQE,6BAAKW,EAAKf,SAASF,EAASG,aAC5B,mCAAMH,EAASO,qBAAf,OACA,qBACEC,IAAKX,EACLY,UAAU,eACVL,MAAO,CAAE,gBAAiB,QAC1BM,IAAI,GACJC,MAAM,OAER,+BACGC,KAAKC,MAAMf,EAAO,QACnB,2CCsSOwB,MApUf,SAAwB3B,GAAQ,IACtB4B,EAA8B5B,EAA9B4B,QAASC,EAAqB7B,EAArB6B,SAAUC,EAAW9B,EAAX8B,OAE3B,SAASC,IACPC,SACGC,eAAe,aACfC,aAAa,QAAS,mBACzBF,SACGC,eAAe,YACfC,aAAa,QAAS,yBAG3B,GAAoB,MAAhBN,EAAQO,IAAa,CAMvB,IANwB,IAClBjC,EAAO,2CACK,MAAhB0B,EAAQO,IAAcP,EAAQA,QAAQ,GAAGQ,KAAO,KADrC,QAGPC,EAAO,GAEJC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAKE,KAAK,CACRtC,GAAI4B,EAASQ,KAAKC,GAAGrC,GACrBC,QAAQ,oCAAD,OACY,MAAjB2B,EAASM,IAAcN,EAASQ,KAAKC,GAAGV,QAAQ,GAAGQ,KAAO,KADrD,QAGPjC,KAAM0B,EAASQ,KAAKC,GAAGE,KAAKrC,KAC5BC,MAAOG,SAAS,IAAID,KAA2B,IAAtBuB,EAASQ,KAAK,GAAGpC,IAAWO,YAuKzD,OACE,qBAAKM,UAAU,kBAAf,SACmB,MAAhBc,EAAQO,KAAgC,MAAjBN,EAASM,IAC/B,eAAC,IAAMM,SAAP,WAtKN,WACE,IAAMC,EAAUV,SAASC,eAAe,SAClCU,EAAaX,SAASC,eAAe,aACrCW,EAAWZ,SAASC,eAAe,YACzCS,EAAQR,aACN,QADF,qCAGoB,MAAhBN,EAAQO,IAAcP,EAAQA,QAAQ,GAAGQ,KAAO,KAHpD,WAMAO,EAAWT,aAAa,QAAS,mBACjCU,EAASV,aAAa,QAAS,yBA4JxBW,GACAd,IACD,qBAAKjB,UAAU,iBAAiBL,MAAO,CAAEE,QAAS,MAAlD,SACE,mCACE,uBACA,qBAAIF,MAAO,CAAE,YAAa,QAA1B,UACGoB,EAASiB,KAAKC,KADjB,KACyBlB,EAASiB,KAAKE,WAEvC,8BAAK,IAAI1C,MAAO2C,sBAGpB,sBAAKnC,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACE,qBACED,IAAKX,EACLY,UAAU,eACVL,MAAO,CACL,mBAAoB,0BACpB,gBAAiB,SAEnBM,IAAI,GACJC,MAAM,UAGV,qBAAKF,UAAU,WAAf,SACE,mCACE,qBAAIL,MAAO,CAAE,YAAa,SAA1B,UACGQ,KAAKC,MAAMU,EAAQY,KAAKrC,KAAO,QAChC,uCAEF,uBACEW,UAAU,eACVL,MAAO,CAAE,YAAa,QAFxB,UAIGmB,EAAQA,QAAQ,GAAGY,KACnB,KACAZ,EAAQA,QAAQ,GAAGsB,oBAI1B,qBAAKpC,UAAU,kBAGnB,qBAAKA,UAAU,sBAAf,SACE,sBACEA,UAAU,YACVL,MAAO,CACL,mBAAoB,oBACpB,gBAAiB,QAJrB,UAOE,uBACA,sBAAKK,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACGG,KAAKC,MAAMU,EAAQY,KAAKW,SAAW,QADtC,KACiD,IAC9ClC,KAAKC,MAAMU,EAAQY,KAAKY,SAAW,QAFtC,IAE+C,oCAAa,IAF5D,IAIE,uBACA,mDAGF,sBAAKtC,UAAU,WAAf,UACGc,EAAQY,KAAKa,SADhB,KAEE,uBACA,iDAEF,sBAAKvC,UAAU,WAAf,UACGc,EAAQY,KAAKc,SADhB,OAEE,uBACA,iDAEF,sBAAKxC,UAAU,WAAf,UACGc,EAAQ2B,WAAa,IADxB,MAEE,uBACA,sDAGJ,uBACA,sBAAKzC,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACGG,KAAKC,MAA4B,GAArBU,EAAQ4B,KAAKC,MAAc,GAD1C,SAEE,uBACA,6CAEF,sBAAK3C,UAAU,WAAf,UACGc,EAAQ4B,KAAKE,IADhB,IACqB,oCADrB,MAEE,uBACA,uDAEF,sBAAK5C,UAAU,WAAf,UACG,IAAIR,KACmB,IAAtBsB,EAAQ+B,IAAIC,SACZhD,qBACF,uBACA,gDAEF,sBAAKE,UAAU,WAAf,UACG,IAAIR,KAA0B,IAArBsB,EAAQ+B,IAAIE,QAAejD,qBACrC,uBACA,kDAGJ,+BAlQd,WACE,GAAY,IAATkB,EACD,OACE,yBAASgC,GAAG,MAAMhD,UAAU,MAAML,MAAO,CAAEsD,SAAU,UAArD,SACA,qBAAKjD,UAAU,kBAAf,SACE,qBAAIgD,GAAG,WAAP,UACE,+BACE,oBACEE,cAAY,WACZlD,UAAU,YACVmD,KAAK,QAHP,UAKE,qBACEnD,UAAU,uCACVL,MAAO,CAAE,eAAgB,MAF3B,SAIE,mDAEF,mBAAGK,UAAU,qCAEf,qBAAKgD,GAAG,OAAOhD,UAAU,WAAWoD,cAAY,YAAhD,SACE,oBAAIJ,GAAG,WAAWhD,UAAU,YAA5B,SACE,6BACE,qBACEA,UAAU,kBACVL,MAAO,CAAEsD,SAAU,UAFrB,SAIE,qBACEjD,UAAU,yBACVL,MAAO,CACL,aAAc,SACd0D,SAAU,WACVC,QAAS,QALb,cAQgBC,IAAbxC,EACGQ,EAAKiC,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CACEtE,GAAIsE,EAAItE,GACRC,QAASqE,EAAIrE,QACbC,KAAMoE,EAAIpE,KACVC,MAAOmE,EAAInE,WAGf,kBAQhB,+BACE,oBACE4D,cAAY,WACZlD,UAAU,YACVmD,KAAK,QAHP,UAKE,qBACEnD,UAAU,uCACVL,MAAO,CAAE,eAAgB,MAF3B,SAIE,kDAEF,mBAAGK,UAAU,qCAEf,qBAAKgD,GAAG,OAAOhD,UAAU,WAAWoD,cAAY,YAAhD,SACE,oBAAIJ,GAAG,WAAWhD,UAAU,YAA5B,SACE,6BACE,qBACEA,UAAU,kBACVL,MAAO,CAAEsD,SAAU,UAFrB,SAIE,qBACEjD,UAAU,yBACVL,MAAO,CACL,aAAc,SACd0D,SAAU,WACVC,QAAS,QALb,cAQgBC,IAAbxC,EACGQ,EAAKiC,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CACEtE,GAAIsE,EAAItE,GACRC,QAASqE,EAAIrE,QACbC,KAAMoE,EAAIpE,KACVC,MAAOmE,EAAInE,WAGf,kBAQhB,+BACE,oBACE4D,cAAY,WACZlD,UAAU,YACVmD,KAAK,QAHP,UAKE,qBACEnD,UAAU,uCACVL,MAAO,CAAE,eAAgB,MAF3B,SAIE,oDAEF,mBAAGK,UAAU,qCAEf,qBAAKgD,GAAG,OAAOhD,UAAU,WAAWoD,cAAY,YAAhD,SACE,oBAAIJ,GAAG,WAAWhD,UAAU,YAA5B,SACE,6BACE,qBACEA,UAAU,kBACVL,MAAO,CAAEsD,SAAU,UAFrB,SAIE,qBACEjD,UAAU,yBACVL,MAAO,CACL,aAAc,SACd0D,SAAU,WACVC,QAAS,QALb,cAQgBC,IAAbxC,EACGQ,EAAKiC,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CACEtE,GAAIsE,EAAItE,GACRC,QAASqE,EAAIrE,QACbC,KAAMoE,EAAIpE,UAGd,yBAgIjBqE,MAGH,qBAAK1D,UAAU,WAAf,SACE,6BAAKc,EAAQ6C,cAMrB,OACE,sBAAK3D,UAAU,sBAAf,UACGiB,IACD,oBAAItB,MAAO,CAAE,iBAAkB,QAA/B,SAA0CmB,EAAQ6C,c,iCChTpDC,EAAOC,IAASC,cAXD,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKbC,EAAmB,IAAIT,IAASU,KAAKC,qBCqK5BC,MApLf,WAEE,IAAMC,EAAS,mCAFE,EAIFnE,mBAAS,CACtBoE,KAAM,GACNC,QAAS,KAFJC,EAJU,sBAWatE,mBAAS,IAXtB,mBAWVkE,EAXU,KAWDK,EAXC,OAYevE,mBAAS,IAZxB,mBAYVwE,EAZU,KAYAC,EAZA,OAaIzE,mBAAS,CAC5BS,OAAQ,EACRiE,MAAO,KAFFC,EAbU,oBA2BjB,SAASC,IACgB,IAApBD,EAAWlE,OACZ4C,EAAKW,OAAOa,gBAAgBd,GAAkBe,MAAK,SAACC,EAAQC,GACvDA,EACDC,MAAM,QAASD,IAEfL,EAAWlE,OAAO,EAClBwE,MAAM,uBAfZ5B,EAAKW,OAAOkB,oBAAmB,SAACC,GAC9B,GAAGA,EAAM,CACP,IAAIC,EAAWD,EAAKE,MAAMC,MAAM,KAChCX,EAAWD,MAAMU,EAAS,YAiB5B/B,EAAKW,OAAOuB,UACZZ,EAAWlE,OAAO,EAClBkE,EAAWD,MAAQ,GACnBO,MAAM,yBA1CO,SA8DFO,EA9DE,8EA8DjB,WAA2BC,GAA3B,iBAAAC,EAAA,yDACED,EAAEE,iBACgB,KAAdrB,EAAKF,KAFX,gBAGIa,MAAM,cAHV,uCAMuBW,MAAM,qDAAD,OAC+BtB,EAAKF,KADpC,kBACkDD,IAEvEW,MAAK,SAACe,GAAD,OAASA,EAAIC,UAClBhB,MAAK,SAACiB,GAAD,OAAUA,KAVtB,cAMUA,EANV,OAYIxB,EAAW,CACTwB,KAAMA,IAbZ,UAgBwBH,MAAM,qDAAD,OAC8BtB,EAAKF,KADnC,kBACiDD,IAEvEW,MAAK,SAACe,GAAD,OAASA,EAAIC,UAClBhB,MAAK,SAACiB,GAAD,OAAUA,KApBtB,QAgBUC,EAhBV,OAqBIvB,EAAY,CACVsB,KAAMC,IAtBZ,6CA9DiB,sBA+FjB,OACE,qBAAKvD,GAAG,QAAQhD,UAAU,QAA1B,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,MAAMgD,GAAG,YAAYrD,MAAO,CAAEE,QAAS,SAAtD,UACE,qBAAKG,UAAU,aACf,qBACEA,UAAU,sBACVL,MAAO,CACL,mBAAoB,oBACpB,gBAAiB,QAJrB,SAOE,oBAAIA,MAAO,CAAE,YAAa,QAA1B,2BAEF,qBAAKK,UAAU,sBAAf,SACE,yBACEA,UAAU,wCACVgD,GAAG,UACHwD,QAAS,kBAAMrB,KAHjB,UAIC,mBAAGnF,UAAU,iBAAiBL,MAAO,CAAC8G,WAAW,OAAQ5G,QAAS,OAAQK,MAAM,OAAQ,gBAAgB,SAAagF,EAAWD,cAGrI,sBACEjF,UAAU,MACVgD,GAAG,WACHrD,MAAO,CAAE,iBAAkB,QAAS+G,WAAY,aAHlD,UAKE,qBAAK1G,UAAU,aACf,qBAAKA,UAAU,WAAf,SACE,sBACE2G,MAAM,mBACNC,IAAI,eACJjH,MAAO,CACL,mBAAoB,oBACpB,gBAAiB,QACjBE,QAAS,QANb,UASE,uBACEgH,KAAK,OACL7D,GAAG,QACHrD,MAAO,CAAEmH,QAAS,IAAK,gBAAiB,SACxC9G,UAAU,8CACViC,KAAK,OACL8E,YAAY,kBACZC,SAAU,SAACC,GACTpC,EAAKF,KAAOsC,EAAMC,OAAOC,OAE3BC,WAAY,SAACpB,GAAD,OAtDR,SAACA,GACH,UAAVA,EAAEqB,KACJtB,EAAYC,GAoDiBsB,CAAUtB,MAnBjC,SAsBE,qBAAKW,MAAM,qBAAX,SACE,wBACE3G,UAAU,2CACVwG,QAAS,SAACR,GAAD,OAtGzB,SAAwBA,GACtBA,EAAEE,iBACFqB,IAAEC,KAAK,CACLC,IAAK,mCACLC,cAAe,WACfC,SAAU,QACVC,QAAS,SAAUC,GACjBhD,EAAKF,KAAOkD,EAAS7F,KACrBd,SAASC,eAAe,SAASgG,MAAQtC,EAAKF,KAC9CoB,EAAYC,MA6Fc8B,CAAe9B,IAFjC,SAIE,qBACE+B,MAAM,6BACN7H,MAAM,KACN8H,OAAO,KACPC,KAAK,eACLjI,UAAU,eACVkI,QAAQ,YANV,SAQE,sBACEC,YAAU,UACVC,EAAE,6OAOd,qBAAKpI,UAAU,qBAECuD,IAAjBkB,EAAQ6B,WAAwC/C,IAAlBwB,EAASuB,KACtC,8BACE,cAAC,EAAD,CAAgBxF,QAAS2D,EAAQ6B,KAAMvF,SAAUgE,EAASuB,KAAMtF,OAAQkE,EAAWlE,WAEnF,WCxKGqH,MARf,WACE,OACE,qBAAKrI,UAAU,MAAf,SACE,cAAC,EAAD,OCGSsI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnD,MAAK,YAAkD,IAA/CoD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9H,SAASC,eAAe,SAM1BmH,M","file":"static/js/main.2e72007a.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nfunction HForecast(props) {\r\n  const { dt, iconurl, temp, today } = props;\r\n  const datetime = new Date(dt * 1000);\r\n\r\n  if (parseInt(datetime.getDay()) === today) {\r\n    return (\r\n      <div\r\n        style={{\r\n          \"background-color\": \"rgb(0, 0, 0, 0.4)\",\r\n          \"border-radius\": \"40px\",\r\n          margin: \"6px\",\r\n          padding: \"15px\",\r\n        }}\r\n      >\r\n        <h4>Today</h4>\r\n        <h4> {datetime.toLocaleTimeString()} </h4>\r\n        <img\r\n          src={iconurl}\r\n          className=\"weather-icon\"\r\n          style={{ \"border-radius\": \"50px\" }}\r\n          alt=\"\"\r\n          width=\"65\"\r\n        />\r\n        <h4>\r\n          {Math.floor(temp - 273.15)}\r\n          <sup>o</sup>\r\n        </h4>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default HForecast;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nfunction DForecast(props) {\r\n  const { dt, iconurl, temp, today } = props;\r\n  const datetime = new Date(dt * 1000);\r\n  const [days] = React.useState([\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ]);\r\n\r\n  function dayTitle() {\r\n    if (parseInt(datetime.getDay()) === today) {\r\n      return <h4>Today</h4>;\r\n    } else if (parseInt(datetime.getDay()) === today + 1) {\r\n      return <h4>Tommorrow</h4>;\r\n    } else {\r\n      return <h4>{days[parseInt(datetime.getDay())]}</h4>;\r\n    }\r\n  }\r\n\r\n  if (\r\n    (datetime.toLocaleTimeString() === \"2:00:00 PM\" &&\r\n      parseInt(datetime.getDay()) !== today) ||\r\n    (datetime.toLocaleTimeString() === \"8:00:00 PM\" &&\r\n      parseInt(datetime.getDay()) === today)\r\n  ) {\r\n    return (\r\n      <div\r\n        style={{\r\n          \"background-color\": \"rgb(0, 0, 0, 0.4)\",\r\n          \"border-radius\": \"40px\",\r\n          margin: \"6px\",\r\n          padding: \"15px\",\r\n        }}\r\n      >\r\n        <h4>\r\n          {datetime.getDate() +\r\n            \"/\" +\r\n            (parseInt(datetime.getMonth()) + 1) +\r\n            \"/\" +\r\n            datetime.getFullYear()}\r\n        </h4>\r\n        {dayTitle()}\r\n        <img\r\n          src={iconurl}\r\n          className=\"weather-icon\"\r\n          style={{ \"border-radius\": \"50px\" }}\r\n          alt=\"\"\r\n          width=\"65\"\r\n        />\r\n        <h4>\r\n          {Math.floor(temp - 273.15)}\r\n          <sup>o</sup>\r\n        </h4>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default DForecast;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nfunction MForecast(props) {\r\n  const { dt, iconurl, temp } = props;\r\n  const datetime = new Date(dt * 1000);\r\n  const [days] = React.useState([\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        \"background-color\": \"rgb(0, 0, 0, 0.4)\",\r\n        \"border-radius\": \"40px\",\r\n        margin: \"6px\",\r\n        padding: \"15px\",\r\n      }}\r\n    >\r\n      <h4>{days[parseInt(datetime.getDay())]}</h4>\r\n      <h4> {datetime.toLocaleTimeString()} </h4>\r\n      <img\r\n        src={iconurl}\r\n        className=\"weather-icon\"\r\n        style={{ \"border-radius\": \"50px\" }}\r\n        alt=\"\"\r\n        width=\"65\"\r\n      />\r\n      <h4>\r\n        {Math.floor(temp - 273.15)}\r\n        <sup>o</sup>\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MForecast;\r\n","/** @format */\n\nimport React from \"react\";\nimport HForecast from \"./hforecast\";\nimport DForecast from \"./dforecast\";\nimport MForecast from \"./mforecast\";\n\nfunction DisplayWeather(props) {\n  const { weather, forecast, status } = props;\n\n  function setpadding() {\n    document\n      .getElementById(\"setheader\")\n      .setAttribute(\"style\", \"padding: 100px;\");\n    document\n      .getElementById(\"setinput\")\n      .setAttribute(\"style\", \"padding-bottom: 50px;\");\n  }\n\n  if (weather.cod === 200) {\n    const iconurl = `https://openweathermap.org/img/w/${\n      weather.cod !== 404 ? weather.weather[0].icon : null\n    }.png`;\n    const list = [];\n\n    for (var i = 0; i < 40; i++) {\n      list.push({\n        dt: forecast.list[i].dt,\n        iconurl: `https://openweathermap.org/img/w/${\n          forecast.cod !== 404 ? forecast.list[i].weather[0].icon : null\n        }.png`,\n        temp: forecast.list[i].main.temp,\n        today: parseInt(new Date(forecast.list[0].dt * 1000).getDay()),\n      });\n    }\n\n    function updatebg() {\n      const bgImage = document.getElementById(\"setbg\");\n      const setheading = document.getElementById(\"setheader\");\n      const setinput = document.getElementById(\"setinput\");\n      bgImage.setAttribute(\n        \"style\",\n        `background-image:url(image/${\n          weather.cod !== 404 ? weather.weather[0].icon : null\n        }.gif);`\n      );\n      setheading.setAttribute(\"style\", \"padding: 100px;\");\n      setinput.setAttribute(\"style\", \"padding-bottom: 50px;\");\n    }\n\n    function premium() {\n      if(status===1) {\n        return (\n          <section id=\"faq\" className=\"faq\" style={{ overflow: \"hidden\" }}>\n          <div className=\"container-fluid\">\n            <ul id=\"faq-list\">\n              <li>\n                <a\n                  data-toggle=\"collapse\"\n                  className=\"collapsed\"\n                  href=\"#faq1\"\n                >\n                  <div\n                    className=\"container-fluid text-white text-left\"\n                    style={{ \"padding-left\": \"3%\" }}\n                  >\n                    <h1>Hourly Forecast</h1>\n                  </div>\n                  <i className=\"ion-android-remove text-white\"></i>\n                </a>\n                <div id=\"faq1\" className=\"collapse\" data-parent=\"#faq-list\">\n                  <ul id=\"faq-list\" className=\"text-left\">\n                    <li>\n                      <div\n                        className=\"container-fluid\"\n                        style={{ overflow: \"hidden\" }}\n                      >\n                        <div\n                          className=\"text-white text-center\"\n                          style={{\n                            \"overflow-x\": \"scroll\",\n                            position: \"relative\",\n                            display: \"flex\",\n                          }}\n                        >\n                          {forecast !== undefined\n                            ? list.map((num) => (\n                                <HForecast\n                                  dt={num.dt}\n                                  iconurl={num.iconurl}\n                                  temp={num.temp}\n                                  today={num.today}\n                                />\n                              ))\n                            : null}\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n\n              <li>\n                <a\n                  data-toggle=\"collapse\"\n                  className=\"collapsed\"\n                  href=\"#faq2\"\n                >\n                  <div\n                    className=\"container-fluid text-white text-left\"\n                    style={{ \"padding-left\": \"3%\" }}\n                  >\n                    <h1>Daily Forecast</h1>\n                  </div>\n                  <i className=\"ion-android-remove text-white\"></i>\n                </a>\n                <div id=\"faq2\" className=\"collapse\" data-parent=\"#faq-list\">\n                  <ul id=\"faq-list\" className=\"text-left\">\n                    <li>\n                      <div\n                        className=\"container-fluid\"\n                        style={{ overflow: \"hidden\" }}\n                      >\n                        <div\n                          className=\"text-white text-center\"\n                          style={{\n                            \"overflow-x\": \"scroll\",\n                            position: \"relative\",\n                            display: \"flex\",\n                          }}\n                        >\n                          {forecast !== undefined\n                            ? list.map((num) => (\n                                <DForecast\n                                  dt={num.dt}\n                                  iconurl={num.iconurl}\n                                  temp={num.temp}\n                                  today={num.today}\n                                />\n                              ))\n                            : null}\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n\n              <li>\n                <a\n                  data-toggle=\"collapse\"\n                  className=\"collapsed\"\n                  href=\"#faq3\"\n                >\n                  <div\n                    className=\"container-fluid text-white text-left\"\n                    style={{ \"padding-left\": \"3%\" }}\n                  >\n                    <h1>Monthly Forecast</h1>\n                  </div>\n                  <i className=\"ion-android-remove text-white\"></i>\n                </a>\n                <div id=\"faq3\" className=\"collapse\" data-parent=\"#faq-list\">\n                  <ul id=\"faq-list\" className=\"text-left\">\n                    <li>\n                      <div\n                        className=\"container-fluid\"\n                        style={{ overflow: \"hidden\" }}\n                      >\n                        <div\n                          className=\"text-white text-center\"\n                          style={{\n                            \"overflow-x\": \"scroll\",\n                            position: \"relative\",\n                            display: \"flex\",\n                          }}\n                        >\n                          {forecast !== undefined\n                            ? list.map((num) => (\n                                <MForecast\n                                  dt={num.dt}\n                                  iconurl={num.iconurl}\n                                  temp={num.temp}\n                                />\n                              ))\n                            : null}\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </section>\n        );\n      }\n    }\n\n    return (\n      <div className=\"container-fluid\">\n        {weather.cod !== 404 && forecast.cod !== 404 ? (\n          <React.Fragment>\n            {updatebg()}\n            {setpadding()}\n            <div className=\"row text-white\" style={{ padding: \"5%\" }}>\n              <strong>\n                <br />\n                <h1 style={{ \"font-size\": \"60px\" }}>\n                  {forecast.city.name}, {forecast.city.country}\n                </h1>\n                <h4>{new Date().toDateString()}</h4>\n              </strong>\n            </div>\n            <div className=\"row text-white\">\n              <div className=\"col-lg-6\">\n                <div className=\"row\">\n                  <div className=\"col-lg-3\"></div>\n                  <div className=\"col-lg-3\">\n                    <img\n                      src={iconurl}\n                      className=\"weather-icon\"\n                      style={{\n                        \"background-color\": \"rgb(255, 255, 255, 0.4)\",\n                        \"border-radius\": \"100px\",\n                      }}\n                      alt=\"\"\n                      width=\"130\"\n                    />\n                  </div>\n                  <div className=\"col-lg-3\">\n                    <strong>\n                      <h1 style={{ \"font-size\": \"100px\" }}>\n                        {Math.floor(weather.main.temp - 273.15)}\n                        <sup>o</sup>\n                      </h1>\n                      <span\n                        className=\"weather-main\"\n                        style={{ \"font-size\": \"20px\" }}\n                      >\n                        {weather.weather[0].main}\n                        {\", \"}\n                        {weather.weather[0].description}\n                      </span>\n                    </strong>\n                  </div>\n                  <div className=\"col-lg-3\"></div>\n                </div>\n              </div>\n              <div className=\"col-lg-6 text-light\">\n                <div\n                  className=\"container\"\n                  style={{\n                    \"background-color\": \"rgb(0, 0, 0, 0.4)\",\n                    \"border-radius\": \"20px\",\n                  }}\n                >\n                  <br />\n                  <div className=\"row\">\n                    <div className=\"col-lg-3\">\n                      {Math.floor(weather.main.temp_max - 273.15)} /{\" \"}\n                      {Math.floor(weather.main.temp_min - 273.15)} <sup>o</sup>{\" \"}\n                      C\n                      <br />\n                      <strong>High / Low</strong>\n                    </div>\n\n                    <div className=\"col-lg-3\">\n                      {weather.main.humidity} %\n                      <br />\n                      <strong>Humidity</strong>\n                    </div>\n                    <div className=\"col-lg-3\">\n                      {weather.main.pressure} hPa\n                      <br />\n                      <strong>Pressure</strong>\n                    </div>\n                    <div className=\"col-lg-3\">\n                      {weather.visibility / 1000} Km\n                      <br />\n                      <strong>Visibility</strong>\n                    </div>\n                  </div>\n                  <br />\n                  <div className=\"row\">\n                    <div className=\"col-lg-3\">\n                      {Math.floor((weather.wind.speed * 18) / 5)} Km/hr\n                      <br />\n                      <strong>Wind</strong>\n                    </div>\n                    <div className=\"col-lg-3\">\n                      {weather.wind.deg} <sup>o</sup>deg\n                      <br />\n                      <strong>Wind Direction</strong>\n                    </div>\n                    <div className=\"col-lg-3\">\n                      {new Date(\n                        weather.sys.sunrise * 1000\n                      ).toLocaleTimeString()}\n                      <br />\n                      <strong>Sunrise</strong>\n                    </div>\n                    <div className=\"col-lg-3\">\n                      {new Date(weather.sys.sunset * 1000).toLocaleTimeString()}\n                      <br />\n                      <strong>Sunset</strong>\n                    </div>\n                  </div>\n                  <br />\n                </div>\n              </div>\n            </div>\n            \n            {premium()}\n          </React.Fragment>\n        ) : (\n          <div className=\"maincard\">\n            <h2>{weather.message}</h2>\n          </div>\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"maincard text-white\">\n        {setpadding()}\n        <h2 style={{ \"padding-bottom\": \"50px\" }}>{weather.message}</h2>\n      </div>\n    );\n  }\n}\nexport default DisplayWeather;\n","//import * as firebase from 'firebase';\r\nimport firebase from 'firebase'\r\n//import firebase from 'firebase/app';\r\n\r\n//import {facebookProvider} from 'react-facebook';\r\n//export const auth = firebase.auth();\r\n//export const facebookProvider = firebase.auth();\r\n//export {facebookProvider} from \"./fire\";\r\n//export const facebookProvider = firebase.auth('./fire');\r\n//import facebookProvider from './fire';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAv0jfJ3ohFFcc_r63Zkn4UQogSaoEKXtk\",\r\n    authDomain: \"weather-d2468.firebaseapp.com\",\r\n    projectId: \"weather-d2468\",\r\n    storageBucket: \"weather-d2468.appspot.com\",\r\n    messagingSenderId: \"742380104767\",\r\n    appId: \"1:742380104767:web:94c83b3dbaefe6e90edc8a\",\r\n    measurementId: \"G-8MRSF1RGNZ\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport {fire, facebookProvider};","/** @format */\n\nimport React, { useState } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport $ from \"jquery\";\nimport \"./weather.css\";\nimport {fire, facebookProvider} from \"./fire\";\n\nfunction Weather() {\n  //api variable\n  const APIKEY = \"ac8513722d885e3436d3cb8b583d7553\";\n  //handle input\n  const [form] = useState({ \n    City: \"\",\n    Country: \"\",\n  });\n\n\n  //with empty array\n  const [Weather, setWeather] = useState([]);\n  const [Forecast, setForecast] = useState([]);\n  const [LoginState] = useState({\n    status: 0,\n    title: \"\",\n  });\n\n  function updateLoginSystem() {\n    fire.auth().onAuthStateChanged((user) => {\n      if(user) {\n        var username = user.email.split(\"@\");\n        LoginState.title=username[0];\n      }\n    });\n  }\n\n  function submitSignInWithFacebook() {\n    if(LoginState.status===0) {\n      fire.auth().signInWithPopup(facebookProvider).then((result, error)=>{\n        if(error) {\n          alert(\"Error\", error);\n        } else {\n          LoginState.status=1;\n          alert(\"Login Successfully!\");\n          updateLoginSystem();\n        }\n      });\n    } else {\n      fire.auth().signOut();\n      LoginState.status=0;\n      LoginState.title = \"\";\n      alert(\"LogOut Successfully!\");\n    }\n  }\n\n  //location\n  function updatelocation(e) {\n    e.preventDefault();\n    $.ajax({\n      url: \"https://geolocation-db.com/jsonp\",\n      jsonpCallback: \"callback\",\n      dataType: \"jsonp\",\n      success: function (location) {\n        form.City = location.city;\n        document.getElementById(\"city1\").value = form.City;\n        weatherData(e);\n      },\n    });\n  }\n\n  //fetch weather api data\n  async function weatherData(e) {\n    e.preventDefault();\n    if (form.City === \"\") {\n      alert(\"Add values\");\n    } else {\n      //city name url\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.City}&appid=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n\n      setWeather({\n        data: data,\n      });\n\n      const data2 = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast?q=${form.City}&appid=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n      setForecast({\n        data: data2,\n      });\n    }\n  }\n\n  const enterfunc = (e) => {\n    if (e.key === \"Enter\") {\n      weatherData(e);\n    }\n  };\n\n  return (\n    <div id=\"setbg\" className=\"setbg\">\n      <div className=\"container-fluid\">\n        <div className=\"row\" id=\"setheader\" style={{ padding: \"160px\" }}>\n          <div className=\"col-lg-4\"></div>\n          <div\n            className=\"col-lg-4 text-white\"\n            style={{\n              \"background-color\": \"rgb(0, 0, 0, 0.4)\",\n              \"border-radius\": \"50px\",\n            }}\n          >\n            <h1 style={{ \"font-size\": \"55px\" }}>Weather App</h1>\n          </div>\n          <div className=\"col-lg-4 text-right\">\n            <button\n              className=\"btn btn-dark btn-outline-light btn-lg\"\n              id=\"loginID\"\n              onClick={() => submitSignInWithFacebook()}\n            ><i className=\"fa fa-facebook\" style={{background:'blue', padding: '15px', width:'50px', 'border-radius':'90%'}}></i>{LoginState.title}</button>\n          </div>\n        </div>\n        <div\n          className=\"row\"\n          id=\"setinput\"\n          style={{ \"padding-bottom\": \"323px\", transition: \"0.8s 0.5s\" }}\n        >\n          <div className=\"col-sm-4\"></div>\n          <div className=\"col-sm-4\">\n            <div\n              class=\"input-group mb-3\"\n              for=\"inputdefault\"\n              style={{\n                \"background-color\": \"rgb(0, 0, 0, 0.4)\",\n                \"border-radius\": \"100px\",\n                padding: \"10px\",\n              }}\n            >\n              <input\n                type=\"text\"\n                id=\"city1\"\n                style={{ opacity: \"1\", \"border-radius\": \"100px\" }}\n                className=\"form-control text-dark text-center bg-light\"\n                name=\"City\"\n                placeholder=\"Enter City Name\"\n                onChange={(event) => {\n                  form.City = event.target.value;\n                }}\n                onKeyPress={(e) => enterfunc(e)}\n              />\n              &ensp;\n              <div class=\"input-group-append\">\n                <button\n                  className=\"btn btn-primary rounded-circle loc-hover\"\n                  onClick={(e) => updatelocation(e)}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    fill=\"currentColor\"\n                    className=\"bi bi-cursor\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103zM2.25 8.184l3.897 1.67a.5.5 0 0 1 .262.263l1.67 3.897L12.743 3.52 2.25 8.184z\"\n                    />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-4\"></div>\n        </div>\n        {Weather.data !== undefined && Forecast.data !== undefined ? (\n          <div>\n            <DisplayWeather weather={Weather.data} forecast={Forecast.data} status={LoginState.status} />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Weather;\n","/** @format */\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Weather from \"./components/Weather\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}